server.port=${PORT:0}
configuration.text=Configuring the default development enviroment

eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

eureka.client.service-url.defaultZone=http://localhost:8761/eureka

logging.level.org.hibernate.SQL=debug

spring.security.oauth2.client.registration.api-client-oidc.provider=spring
spring.security.oauth2.client.registration.api-client-oidc.client-id=api-client
spring.security.oauth2.client.registration.api-client-oidc.client-secret=secret
spring.security.oauth2.client.registration.api-client-oidc.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.api-client-oidc.redirect-uri= http://127.0.0.1:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.api-client-oidc.scope=openid
spring.security.oauth2.client.registration.api-client-oidc.client-name=api-client-oidc

spring.security.oauth2.client.registration.api-client-authorization-code.provider=spring
spring.security.oauth2.client.registration.api-client-authorization-code.client-id=api-client
spring.security.oauth2.client.registration.api-client-authorization-code.client-secret=secret
spring.security.oauth2.client.registration.api-client-authorization-code.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.api-client-authorization-code.redirect-uri=http://127.0.0.1:8080/authorized
spring.security.oauth2.client.registration.api-client-authorization-code.scope=api.read
spring.security.oauth2.client.registration.api-client-authorization-code.client-name=api-client-authorization-code

spring.security.oauth2.client.provider.spring.issuer-uri=http://auth-server:9000

management.endpoints.web.exposure.include=*
